@using TripManager2._0.ViewModels
@model WelcomeViewModel

@{
    Layout = "UserLayout";
    ViewData["Title"] = "Usuarios";
    var misViajes = Model.ViajesUpdated.Where(v => v.Usuario.Email == User.Identity.Name).ToList();
    var notifications = new List<string>();
}

<head>
    <title>Signed up</title>

</head>
<body>
    <CENTER>
        @if (User.HasClaim("Permission", "Common"))
        {
            <p>
                Desde aquí podrá usar todas las herramientas que la aplicación ofrece.
            </p>
            <br />
        }
        else
        {
            <p>
                Desde aquí podrá regular la aplicación.
            </p>
            <br />
        }
        <br />

        <div class="dropdown badge">
            <span class="badge">@Model.Notifications</span>
            <button onclick="NotificationsFunction()" class="dropbtn">Notificaciones</button>
            <div id="myDropdown" class="dropdown-content">
                @if (User.HasClaim("Permission", "Admin"))
                {
                    if (!Model.UserPendings.Any())
                    {
                        <a style="color:darkblue; font-size:large">No hay usuarios pendientes</a>
                    }
                    else
                    {
                        int cant = Model.UserPendings.Count();

                        if (cant == 1)
                        {
                            <a>Hay @cant usuario pendiente</a>
                        }
                        else
                        {
                            <a>Hay @cant usuarios pendientes</a>
                        }
                    }
                }
                @if (!Model.ViajesUpdated.Any())
                {
                    <a style="color:darkblue; font-size:large">No hay cambios en los viajes</a>
                }
                else
                {
                    <a style="color:darkblue; font-size:large">Cambios en los viajes</a>
                    foreach (var item in Model.NotificationsList)
                    {
                        <a>@item</a>
                    }
                }
                @if (misViajes.Count() == 0)
                {
                    <a style="color:darkblue; font-size:large">Sus viajes no han sido modificados</a>
                }
                else
                {
                    <a style="color:darkblue; font-size:large">Sus viajes</a>
                    foreach (var item in misViajes)
                    {
                        <a>Viaje del @item.FechaInicio --> @item.FechaFin tiene ahora estado @item.Estado</a>
                    }
                }
            </div>
        </div>
            
    </CENTER>

    <script>
    /* When the user clicks on the button,
    toggle between hiding and showing the dropdown content */
    function NotificationsFunction() {
        document.getElementById("myDropdown").classList.toggle("show");
    }

    // Close the dropdown if the user clicks outside of it
    window.onclick = function(event) {
        if (!event.target.matches('.dropbtn')) {
        var dropdowns = document.getElementsByClassName("dropdown-content");
        var i;
        for (i = 0; i < dropdowns.length; i++) {
            var openDropdown = dropdowns[i];
            if (openDropdown.classList.contains('show')) {
            openDropdown.classList.remove('show');
            }
        }
        }
    }
    </script>
</body>



